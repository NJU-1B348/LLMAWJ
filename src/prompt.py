class Prompt:
    gpt = [
        """Dear ChatGPT, I seek your expertise in analyzing reports from static analysis tools, specifically focusing on code written in C/C++. 
        The cases that i will provide to you are about memory leaks in C/C++. Warnings are generated by static analysis tools because they detect potential memory leaks in the code. In most cases, they have found pointers that are not freed after they are no longer needed. But sometimes these warnings can be wrong. 
        For example, the pointer may be used in a loop and not freed until the loop ends, but the pointer is not actually connected to any object allocation. 
        Another example, if two pointers point to the same object, and one of them is freed, the other pointer will still be valid. But the static analysis tool may not be able to detect this and will report a memory leak.
        These are just example cases to illustrate the complexity of static analysis and why the warnings can be wrong, and there are still more cases that static analysis tools will make fake warnings. You need to evaluate the accuracy of the warnings and use the information I provide to determine whether static analysis tools have made mistakes like this or not.
        Your task:
        For each case presented (one error reported at a time), evaluate the accuracy of the findings and elucidate whether they are true or not. Besides giving a result of True or False, provide the chance in 0.00 - 1.00 that this  warning is True. For example, if you are sure this warning is true, then 1.00, if you are sure this warning is false, then 0.00. Provide detailed explanations behind your analyses. Your insights will be invaluable in validating the results and enhancing our understanding of the codebase. Thank you!""",
        
        """
        First of all, try to understand the format of my report:
        //A Block of Alarm.
            {
                "DefectType": "Never Free",     //The class of this alarm.
                "Location": {                   //The location of this alarm. including ln:line cl:column fl:file_path
                    "ln": 358,
                    "cl": 12,
                    "fl": "httpd-2.4.23/server/util_script.c"
                },
                "Function": "original_uri",     //The name of the function where the alarm occurs.
                "Description": {},              //The alarm description generated. Usually empty. When the class is "Partial Leak", it contains "ConditionalFreePath" which contains information of each conditional flow.
                "Events": [],                   //Not used.
                "Var": [                        
                    "first"
                ],                              //The posible variables which caused the alarm. If more than one is given, you need to judge which is the real one.
                "CodeNear": [
                    "}",
                    "while (apr_isspace(*first)) {",
                    "++first;                /*   and the space(s)   */"
                ],                              //The codes around the line of the alarm.
                "SuccessTransform": "True",     //If this value is "False", you can give up analyzing this alarm.
                "TransformMessage": ""          //You do not need to care about this.
            }

        above is an example,you don't need to analyse it and i will give you one type of report at a time next
        notice that i will only give you a few lines of codes near the line where the report of error is, and you need to tell me the report is accurate or not more likely **at the beginning of your answer**. The result must be a stressed word in your answer but dont forget your analysis as well""",
        
        """Then, I need you to understand that your output should be in json format, and the format is provided below:
        {
            "Judge": "False",  // this warning is true or false
            "Chance that the warning is true": 0.20, // the chance that this warning is true. For example, if you are sure this warning is true, then 1.00, if you are sure this warning is false, then 0.00.
            "Explanation": "This warning is false because...", // the explanation of why this warning is true or false
            "Other": "" // other information, if you need more information or you cannot deal with it, please mention it here.
        }

        If you understand all of what I said, please wait for the cases I will give you."""
    ]